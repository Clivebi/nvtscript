CPE = "cpe:/a:openssl:openssl";
if(description){
	script_oid( "1.3.6.1.4.1.25623.1.0.117625" );
	script_version( "2021-09-01T09:38:54+0000" );
	script_tag( name: "last_modification", value: "2021-09-01 09:38:54 +0000 (Wed, 01 Sep 2021)" );
	script_tag( name: "creation_date", value: "2021-09-01 09:25:07 +0000 (Wed, 01 Sep 2021)" );
	script_tag( name: "cvss_base", value: "5.0" );
	script_tag( name: "cvss_base_vector", value: "AV:N/AC:L/Au:N/C:N/I:N/A:P" );
	script_cve_id( "CVE-2012-1165" );
	script_tag( name: "qod_type", value: "remote_banner" );
	script_tag( name: "solution_type", value: "VendorFix" );
	script_name( "OpenSSL: DoS Vulnerability (CVE-2012-1165) - Windows" );
	script_category( ACT_GATHER_INFO );
	script_copyright( "Copyright (C) 2021 Greenbone Networks GmbH" );
	script_family( "Denial of Service" );
	script_dependencies( "gb_openssl_consolidation.sc", "os_detection.sc" );
	script_mandatory_keys( "openssl/detected", "Host/runs_windows" );
	script_tag( name: "summary", value: "OpenSSL is prone to a denial of service (DoS) vulnerability." );
	script_tag( name: "vuldetect", value: "Checks if a vulnerable version is present on the target host." );
	script_tag( name: "insight", value: "The mime_param_cmp function in crypto/asn1/asn_mime.c allows
  remote attackers to cause a denial of service (NULL pointer dereference and application crash) via
  a crafted S/MIME message, a different vulnerability than CVE-2006-7250." );
	script_tag( name: "affected", value: "OpenSSL before 0.9.8u and 1.x before 1.0.0h." );
	script_tag( name: "solution", value: "Update to version 0.9.8u, 1.0.0h or later." );
	exit( 0 );
}
require("host_details.inc.sc");
require("version_func.inc.sc");
if(isnull( port = get_app_port( cpe: CPE ) )){
	exit( 0 );
}
if(!infos = get_app_version_and_location( cpe: CPE, port: port, exit_no_version: TRUE )){
	exit( 0 );
}
version = infos["version"];
location = infos["location"];
if(version_is_less_equal( version: version, test_version: "0.9.8t" )){
	report = report_fixed_ver( installed_version: version, fixed_version: "0.9.8u", install_path: location );
	security_message( port: port, data: report );
	exit( 0 );
}
if(version_in_range( version: version, test_version: "1.0.0", test_version2: "1.0.0g" )){
	report = report_fixed_ver( installed_version: version, fixed_version: "1.0.0h", install_path: location );
	security_message( port: port, data: report );
	exit( 0 );
}
exit( 99 );

