CPE = "cpe:/a:nginx:nginx";
if(description){
	script_oid( "1.3.6.1.4.1.25623.1.0.117523" );
	script_version( "2021-08-12T09:00:13+0000" );
	script_tag( name: "last_modification", value: "2021-08-12 09:00:13 +0000 (Thu, 12 Aug 2021)" );
	script_tag( name: "creation_date", value: "2021-07-01 11:23:40 +0000 (Thu, 01 Jul 2021)" );
	script_tag( name: "cvss_base", value: "7.5" );
	script_tag( name: "cvss_base_vector", value: "AV:N/AC:L/Au:N/C:P/I:P/A:P" );
	script_cve_id( "CVE-2013-0337" );
	script_tag( name: "qod_type", value: "remote_banner_unreliable" );
	script_tag( name: "solution_type", value: "NoneAvailable" );
	script_name( "nginx <= 1.21.1 Information Disclosure Vulnerability" );
	script_category( ACT_GATHER_INFO );
	script_copyright( "Copyright (C) 2021 Greenbone Networks GmbH" );
	script_family( "Web Servers" );
	script_dependencies( "gb_nginx_consolidation.sc", "os_detection.sc" );
	script_mandatory_keys( "nginx/detected", "Host/runs_unixoide" );
	script_tag( name: "summary", value: "nginx is prone to an information disclosure vulnerability." );
	script_tag( name: "insight", value: "The default configuration of nginx uses world-readable
  permissions for the access.log and error.log files, which allows local users to obtain sensitive
  information by reading the files." );
	script_tag( name: "vuldetect", value: "Checks if a vulnerable version is present on the target host." );
	script_tag( name: "affected", value: "nginx up to the most recent version 1.21.1." );
	script_tag( name: "solution", value: "No known solution is available as of 12th August, 2021.
  Information regarding this issue will be updated once solution details are available." );
	script_xref( name: "URL", value: "https://trac.nginx.org/nginx/ticket/376" );
	exit( 0 );
}
require("host_details.inc.sc");
require("version_func.inc.sc");
if(isnull( port = get_app_port( cpe: CPE ) )){
	exit( 0 );
}
if(!infos = get_app_version_and_location( cpe: CPE, port: port, exit_no_version: TRUE )){
	exit( 0 );
}
version = infos["version"];
location = infos["location"];
if(version_is_less_equal( version: version, test_version: "1.21.1" )){
	report = report_fixed_ver( installed_version: version, fixed_version: "None", install_path: location );
	security_message( port: port, data: report );
	exit( 0 );
}
exit( 99 );

