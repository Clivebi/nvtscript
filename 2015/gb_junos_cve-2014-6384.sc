CPE = "cpe:/o:juniper:junos";
if(description){
	script_oid( "1.3.6.1.4.1.25623.1.0.105942" );
	script_cve_id( "CVE-2014-6384" );
	script_bugtraq_id( 72077 );
	script_tag( name: "cvss_base", value: "6.9" );
	script_tag( name: "cvss_base_vector", value: "AV:L/AC:M/Au:N/C:C/I:C/A:C" );
	script_version( "$Revision: 12106 $" );
	script_tag( name: "qod_type", value: "package" );
	script_tag( name: "solution_type", value: "VendorFix" );
	script_name( "Junos Privilege Escalation Vulnerability" );
	script_xref( name: "URL", value: "http://kb.juniper.net/JSA10667" );
	script_tag( name: "summary", value: "Local privilege escalation vulnerability in Junos OS." );
	script_tag( name: "impact", value: "Authenticated local users may be allowed to run commands
that should be denied to them by policy leading to privilege escalation." );
	script_tag( name: "insight", value: "A problem with processing authorization attributes
containing double quotes within the TACACS+ configuration may allow authenticated local users
to run commands that should be denied by policy." );
	script_tag( name: "vuldetect", value: "Checks if a vulnerable OS build is present on the target host." );
	script_tag( name: "solution", value: "New builds of Junos OS software are available from Juniper.
As a workaround do not use double quotes in TACACS+ configurations for user authentication." );
	script_tag( name: "affected", value: "Junos OS 12.1, 12.3, 13.1, 13.2, 13.3 and 14.1" );
	script_tag( name: "last_modification", value: "$Date: 2018-10-26 08:33:36 +0200 (Fri, 26 Oct 2018) $" );
	script_tag( name: "creation_date", value: "2015-01-23 10:29:47 +0700 (Fri, 23 Jan 2015)" );
	script_category( ACT_GATHER_INFO );
	script_family( "JunOS Local Security Checks" );
	script_copyright( "This script is Copyright (C) 2015 Greenbone Networks GmbH" );
	script_dependencies( "gb_ssh_junos_get_version.sc", "gb_junos_snmp_version.sc" );
	script_mandatory_keys( "Junos/Version" );
	exit( 0 );
}
require("host_details.inc.sc");
require("revisions-lib.inc.sc");
if(!version = get_app_version( cpe: CPE, nofork: TRUE )){
	exit( 0 );
}
if(IsMatchRegexp( version, "^12" )){
	if( revcomp( a: version, b: "12.1X44-D45" ) < 0 ){
		security_message( port: 0, data: version );
		exit( 0 );
	}
	else {
		if( ( revcomp( a: version, b: "12.1X46-D25" ) < 0 ) && ( revcomp( a: version, b: "12.1X46" ) >= 0 ) ){
			security_message( port: 0, data: version );
			exit( 0 );
		}
		else {
			if( ( revcomp( a: version, b: "12.1X47-D15" ) < 0 ) && ( revcomp( a: version, b: "12.1X47" ) >= 0 ) ){
				security_message( port: 0, data: version );
				exit( 0 );
			}
			else {
				if(( revcomp( a: version, b: "12.3R9" ) < 0 ) && ( revcomp( a: version, b: "12.3" ) >= 0 )){
					security_message( port: 0, data: version );
					exit( 0 );
				}
			}
		}
	}
}
if(IsMatchRegexp( version, "^13" )){
	if( revcomp( a: version, b: "13.1R4-S3" ) < 0 ){
		security_message( port: 0, data: version );
		exit( 0 );
	}
	else {
		if( ( revcomp( a: version, b: "13.2R6" ) < 0 ) && ( revcomp( a: version, b: "13.2" ) >= 0 ) ){
			security_message( port: 0, data: version );
			exit( 0 );
		}
		else {
			if(( revcomp( a: version, b: "13.3R5" ) < 0 ) && ( revcomp( a: version, b: "13.3" ) >= 0 )){
				security_message( port: 0, data: version );
				exit( 0 );
			}
		}
	}
}
if(IsMatchRegexp( version, "^14" )){
	if(revcomp( a: version, b: "14.1R3" ) < 0){
		security_message( port: 0, data: version );
		exit( 0 );
	}
}
exit( 99 );

