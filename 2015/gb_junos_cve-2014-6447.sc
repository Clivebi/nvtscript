CPE = "cpe:/o:juniper:junos";
if(description){
	script_oid( "1.3.6.1.4.1.25623.1.0.106025" );
	script_version( "2020-02-28T09:03:19+0000" );
	script_tag( name: "last_modification", value: "2020-02-28 09:03:19 +0000 (Fri, 28 Feb 2020)" );
	script_tag( name: "creation_date", value: "2015-07-15 12:04:27 +0700 (Wed, 15 Jul 2015)" );
	script_tag( name: "cvss_base", value: "5.8" );
	script_tag( name: "cvss_base_vector", value: "AV:N/AC:M/Au:N/C:N/I:P/A:P" );
	script_tag( name: "qod_type", value: "package" );
	script_tag( name: "solution_type", value: "VendorFix" );
	script_cve_id( "CVE-2014-6447" );
	script_name( "Junos J-Web Multiple Vulnerabilities" );
	script_category( ACT_GATHER_INFO );
	script_family( "JunOS Local Security Checks" );
	script_copyright( "Copyright (C) 2015 Greenbone Networks GmbH" );
	script_dependencies( "gb_ssh_junos_get_version.sc", "gb_junos_snmp_version.sc" );
	script_mandatory_keys( "Junos/Version" );
	script_tag( name: "summary", value: "Junos OS is prone to multiple error handling vulnerabilities in J-Web." );
	script_tag( name: "vuldetect", value: "Checks if a vulnerable OS build is present on the target host." );
	script_tag( name: "insight", value: "Multiple vulnerabilities exist in J-Web error handling that may
lead to cross site scripting (XSS) issues or crash the J-Web service." );
	script_tag( name: "impact", value: "The cross site scripting vulnerability may allow a remote network
based attacker to steal sensitive information such as session credentials from an administrative user
or perform administrative actions through an administrative user's browser." );
	script_tag( name: "affected", value: "Junos OS 12.1, 12.3, 13.1, 13.2, 13.3 and 14.1" );
	script_tag( name: "solution", value: "New builds of Junos OS software are available from Juniper. As a
workaround disable J-Web." );
	script_xref( name: "URL", value: "http://kb.juniper.net/JSA10682" );
	exit( 0 );
}
require("host_details.inc.sc");
require("revisions-lib.inc.sc");
if(!version = get_app_version( cpe: CPE, nofork: TRUE )){
	exit( 0 );
}
if(IsMatchRegexp( version, "^12" )){
	if( revcomp( a: version, b: "12.1X44-D45" ) < 0 ){
		security_message( port: 0, data: version );
		exit( 0 );
	}
	else {
		if( ( revcomp( a: version, b: "12.1X46-D30" ) < 0 ) && ( revcomp( a: version, b: "12.1X46" ) >= 0 ) ){
			security_message( port: 0, data: version );
			exit( 0 );
		}
		else {
			if( ( revcomp( a: version, b: "12.1X47-D20" ) < 0 ) && ( revcomp( a: version, b: "12.1X47" ) >= 0 ) ){
				security_message( port: 0, data: version );
				exit( 0 );
			}
			else {
				if( ( revcomp( a: version, b: "12.3R8" ) < 0 ) && ( revcomp( a: version, b: "12.3" ) >= 0 ) ){
					security_message( port: 0, data: version );
					exit( 0 );
				}
				else {
					if(( revcomp( a: version, b: "12.3X48-D10" ) < 0 ) && ( revcomp( a: version, b: "12.3X" ) >= 0 )){
						security_message( port: 0, data: version );
						exit( 0 );
					}
				}
			}
		}
	}
}
if(IsMatchRegexp( version, "^13" )){
	if(revcomp( a: version, b: "13.1R5" ) < 0){
		security_message( port: 0, data: version );
		exit( 0 );
	}
	if( ( revcomp( a: version, b: "13.2R6" ) < 0 ) && ( revcomp( a: version, b: "13.2" ) >= 0 ) ){
		security_message( port: 0, data: version );
		exit( 0 );
	}
	else {
		if(( revcomp( a: version, b: "13.3R4" ) < 0 ) && ( revcomp( a: version, b: "13.3" ) >= 0 )){
			security_message( port: 0, data: version );
			exit( 0 );
		}
	}
}
if(IsMatchRegexp( version, "^14" )){
	if( revcomp( a: version, b: "14.1R3" ) < 0 ){
		security_message( port: 0, data: version );
		exit( 0 );
	}
	else {
		if(( revcomp( a: version, b: "14.1X53-D10" ) < 0 ) && ( revcomp( a: version, b: "14.1X" ) >= 0 )){
			security_message( port: 0, data: version );
			exit( 0 );
		}
	}
}
exit( 99 );

