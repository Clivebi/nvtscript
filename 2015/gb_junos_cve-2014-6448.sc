CPE = "cpe:/o:juniper:junos";
if(description){
	script_oid( "1.3.6.1.4.1.25623.1.0.106041" );
	script_version( "$Revision: 12106 $" );
	script_tag( name: "last_modification", value: "$Date: 2018-10-26 08:33:36 +0200 (Fri, 26 Oct 2018) $" );
	script_tag( name: "creation_date", value: "2015-11-23 09:29:53 +0700 (Mon, 23 Nov 2015)" );
	script_tag( name: "cvss_base", value: "7.2" );
	script_tag( name: "cvss_base_vector", value: "AV:L/AC:L/Au:N/C:C/I:C/A:C" );
	script_tag( name: "qod_type", value: "package" );
	script_tag( name: "solution_type", value: "VendorFix" );
	script_cve_id( "CVE-2014-6448" );
	script_name( "Junos Python Privilege Escalation Vulnerabilities" );
	script_category( ACT_GATHER_INFO );
	script_family( "JunOS Local Security Checks" );
	script_copyright( "This script is Copyright (C) 2015 Greenbone Networks GmbH" );
	script_dependencies( "gb_ssh_junos_get_version.sc", "gb_junos_snmp_version.sc" );
	script_mandatory_keys( "Junos/Version" );
	script_tag( name: "summary", value: "Junos OS is prone to multiple privilege escalation vulnerabilities
in Python." );
	script_tag( name: "vuldetect", value: "Checks if a vulnerable OS build is present on the target host." );
	script_tag( name: "insight", value: "Multiple vulnerabilities in Python on Junos may allow an
authenticated user with shell access on the Junos device to run arbitrary python code, bypassing
system protections that prevent running untrusted code." );
	script_tag( name: "impact", value: "Authenticated attackers could enable elevation of privileges to
gain complete control of the device" );
	script_tag( name: "affected", value: "Junos OS 13.2 and 13.3" );
	script_tag( name: "solution", value: "New builds of Junos OS software are available from Juniper." );
	script_xref( name: "URL", value: "http://kb.juniper.net/JSA10695" );
	exit( 0 );
}
require("host_details.inc.sc");
require("revisions-lib.inc.sc");
if(!version = get_app_version( cpe: CPE, nofork: TRUE )){
	exit( 0 );
}
if(IsMatchRegexp( version, "^13" )){
	if( revcomp( a: version, b: "13.2R5" ) < 0 ){
		security_message( port: 0, data: version );
		exit( 0 );
	}
	else {
		if(( revcomp( a: version, b: "13.3R3" ) < 0 ) && ( revcomp( a: version, b: "13.3" ) >= 0 )){
			security_message( port: 0, data: version );
			exit( 0 );
		}
	}
}
exit( 99 );

