CPE = "cpe:/o:juniper:junos";
if(description){
	script_oid( "1.3.6.1.4.1.25623.1.0.106139" );
	script_version( "$Revision: 12431 $" );
	script_tag( name: "last_modification", value: "$Date: 2018-11-20 10:21:00 +0100 (Tue, 20 Nov 2018) $" );
	script_tag( name: "creation_date", value: "2016-07-14 10:16:23 +0700 (Thu, 14 Jul 2016)" );
	script_tag( name: "cvss_base", value: "7.1" );
	script_tag( name: "cvss_base_vector", value: "AV:N/AC:M/Au:N/C:N/I:N/A:C" );
	script_tag( name: "qod_type", value: "package" );
	script_tag( name: "solution_type", value: "VendorFix" );
	script_cve_id( "CVE-2016-1276" );
	script_name( "Junos SRX-Series ALGs DoS Vulnerability" );
	script_category( ACT_GATHER_INFO );
	script_family( "JunOS Local Security Checks" );
	script_copyright( "This script is Copyright (C) 2016 Greenbone Networks GmbH" );
	script_dependencies( "gb_ssh_junos_get_version.sc", "gb_junos_snmp_version.sc" );
	script_mandatory_keys( "Junos/Version", "Junos/model" );
	script_tag( name: "summary", value: "Junos OS on SRX-Series is prone to a denial of service vulnerability." );
	script_tag( name: "vuldetect", value: "Checks if a vulnerable OS build is present on the target host." );
	script_tag( name: "insight", value: "When High-End SRX-Series chassis have policies with one or more ALG's
(application layer gateways) enabled, which are applied to in-transit traffic, this may trigger a number of
failure conditions which could cause various types of denials of service to traffic in-transit." );
	script_tag( name: "impact", value: "An attacker may cause a denial of service condition." );
	script_tag( name: "affected", value: "Junos OS 12.1, 12.3 and 15.1" );
	script_tag( name: "solution", value: "New builds of Junos OS software are available from Juniper." );
	script_xref( name: "URL", value: "http://kb.juniper.net/JSA10751" );
	exit( 0 );
}
require("host_details.inc.sc");
require("revisions-lib.inc.sc");
require("version_func.inc.sc");
if(!version = get_app_version( cpe: CPE, nofork: TRUE )){
	exit( 0 );
}
if(IsMatchRegexp( version, "^12" )){
	if( ( revcomp( a: version, b: "12.1X46-D50" ) < 0 ) && ( revcomp( a: version, b: "12.1X46" ) >= 0 ) ){
		report = report_fixed_ver( installed_version: version, fixed_version: "12.1X46-D50" );
		security_message( port: 0, data: report );
		exit( 0 );
	}
	else {
		if( ( revcomp( a: version, b: "12.1X47-D23" ) < 0 ) && ( revcomp( a: version, b: "12.1X47" ) >= 0 ) ){
			report = report_fixed_ver( installed_version: version, fixed_version: "12.1X47-D23" );
			security_message( port: 0, data: report );
			exit( 0 );
		}
		else {
			if(( revcomp( a: version, b: "12.3X48-D25" ) < 0 ) && ( revcomp( a: version, b: "12.3X48" ) >= 0 )){
				report = report_fixed_ver( installed_version: version, fixed_version: "12.3X48-D25" );
				security_message( port: 0, data: report );
				exit( 0 );
			}
		}
	}
}
if(IsMatchRegexp( version, "^15" )){
	if(( revcomp( a: version, b: "15.1X49-D40" ) < 0 ) && ( revcomp( a: version, b: "15.1X49" ) >= 0 )){
		report = report_fixed_ver( installed_version: version, fixed_version: "15.1X49-D40" );
		security_message( port: 0, data: report );
		exit( 0 );
	}
}
exit( 99 );

