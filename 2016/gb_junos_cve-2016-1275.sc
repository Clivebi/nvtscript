CPE = "cpe:/o:juniper:junos";
if(description){
	script_oid( "1.3.6.1.4.1.25623.1.0.106134" );
	script_version( "2019-07-24T08:39:52+0000" );
	script_tag( name: "last_modification", value: "2019-07-24 08:39:52 +0000 (Wed, 24 Jul 2019)" );
	script_tag( name: "creation_date", value: "2016-07-14 10:16:23 +0700 (Thu, 14 Jul 2016)" );
	script_tag( name: "cvss_base", value: "6.1" );
	script_tag( name: "cvss_base_vector", value: "AV:A/AC:L/Au:N/C:N/I:N/A:C" );
	script_tag( name: "qod_type", value: "package" );
	script_tag( name: "solution_type", value: "VendorFix" );
	script_cve_id( "CVE-2016-1275" );
	script_name( "Junos mbuf Leak Vulnerability" );
	script_category( ACT_GATHER_INFO );
	script_family( "JunOS Local Security Checks" );
	script_copyright( "This script is Copyright (C) 2016 Greenbone Networks GmbH" );
	script_dependencies( "gb_ssh_junos_get_version.sc", "gb_junos_snmp_version.sc" );
	script_mandatory_keys( "Junos/Version" );
	script_tag( name: "summary", value: "Junos OS is prone to a mbuf leak vulnerability." );
	script_tag( name: "vuldetect", value: "Checks if a vulnerable OS build is present on the target host." );
	script_tag( name: "insight", value: "A Junos device with VPLS routing-instances configured on one or more
interfaces may be susceptible to an mbuf leak when source and destination MAC addresses of Ethernet frames
with the EtherType field of IPv6 are flooded into the VPLS instance.  The Ethernet frames must be injected
directly into a connected interface, limiting exposure to directly connected adjacent networks." );
	script_tag( name: "impact", value: "An attacker may cause denial of service condition." );
	script_tag( name: "affected", value: "Junos OS 13.3 and 14.1" );
	script_tag( name: "solution", value: "New builds of Junos OS software are available from Juniper." );
	script_xref( name: "URL", value: "http://kb.juniper.net/JSA10752" );
	exit( 0 );
}
require("host_details.inc.sc");
require("revisions-lib.inc.sc");
require("version_func.inc.sc");
if(!version = get_app_version( cpe: CPE, nofork: TRUE )){
	exit( 0 );
}
if(IsMatchRegexp( version, "^14\\.1X53" )){
	exit( 99 );
}
if(IsMatchRegexp( version, "^13" )){
	if(revcomp( a: version, b: "13.3R9" ) < 0){
		report = report_fixed_ver( installed_version: version, fixed_version: "13.3R9" );
		security_message( port: 0, data: report );
		exit( 0 );
	}
}
if(IsMatchRegexp( version, "^14" )){
	if(revcomp( a: version, b: "14.1R6" ) < 0){
		report = report_fixed_ver( installed_version: version, fixed_version: "14.1R6" );
		security_message( port: 0, data: report );
		exit( 0 );
	}
}
exit( 99 );

