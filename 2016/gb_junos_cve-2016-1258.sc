CPE = "cpe:/o:juniper:junos";
if(description){
	script_oid( "1.3.6.1.4.1.25623.1.0.106063" );
	script_version( "$Revision: 12431 $" );
	script_tag( name: "last_modification", value: "$Date: 2018-11-20 10:21:00 +0100 (Tue, 20 Nov 2018) $" );
	script_tag( name: "creation_date", value: "2016-01-18 09:17:30 +0700 (Mon, 18 Jan 2016)" );
	script_tag( name: "cvss_base", value: "5.0" );
	script_tag( name: "cvss_base_vector", value: "AV:N/AC:L/Au:N/C:N/I:N/A:P" );
	script_tag( name: "qod_type", value: "package" );
	script_tag( name: "solution_type", value: "VendorFix" );
	script_cve_id( "CVE-2016-1258" );
	script_name( "Junos Embedthis Appweb Server DoS Vulnerability" );
	script_category( ACT_GATHER_INFO );
	script_family( "JunOS Local Security Checks" );
	script_copyright( "This script is Copyright (C) 2016 Greenbone Networks GmbH" );
	script_dependencies( "gb_ssh_junos_get_version.sc", "gb_junos_snmp_version.sc" );
	script_mandatory_keys( "Junos/Version" );
	script_tag( name: "summary", value: "Junos OS is prone to a Denial of Service vulnerability with
J-Web enabled." );
	script_tag( name: "vuldetect", value: "Checks if a vulnerable OS build is present on the target host." );
	script_tag( name: "insight", value: "A denial of service vulnerability in Embedthis Appweb Server
while processing certain malformed HTTP requests may allow a remote unauthenticated user to crash
the J-Web service." );
	script_tag( name: "impact", value: "A network based unauthenticated attacker can cause the J-Web
service on a device to become unavailable." );
	script_tag( name: "affected", value: "Junos OS 12.1, 12.3, 13.2, 13.3, 14.1 and 14.2" );
	script_tag( name: "solution", value: "New builds of Junos OS software are available from Juniper. As
a workaround disable J-Web." );
	script_xref( name: "URL", value: "http://kb.juniper.net/JSA10720" );
	exit( 0 );
}
require("host_details.inc.sc");
require("revisions-lib.inc.sc");
if(!version = get_app_version( cpe: CPE, nofork: TRUE )){
	exit( 0 );
}
if(IsMatchRegexp( version, "^12" )){
	if( ( revcomp( a: version, b: "12.1X44-D60" ) < 0 ) && ( revcomp( a: version, b: "12.1X44" ) >= 0 ) ){
		security_message( port: 0, data: version );
		exit( 0 );
	}
	else {
		if( ( revcomp( a: version, b: "12.1X46-D45" ) < 0 ) && ( revcomp( a: version, b: "12.1X46" ) >= 0 ) ){
			security_message( port: 0, data: version );
			exit( 0 );
		}
		else {
			if( ( revcomp( a: version, b: "12.1X47-D30" ) < 0 ) && ( revcomp( a: version, b: "12.1X47" ) >= 0 ) ){
				security_message( port: 0, data: version );
				exit( 0 );
			}
			else {
				if( ( revcomp( a: version, b: "12.3R10" ) < 0 ) && ( revcomp( a: version, b: "12.3" ) >= 0 ) ){
					security_message( port: 0, data: version );
					exit( 0 );
				}
				else {
					if(( revcomp( a: version, b: "12.3X48-D20" ) < 0 ) && ( revcomp( a: version, b: "12.3X48" ) >= 0 )){
						security_message( port: 0, data: version );
						exit( 0 );
					}
				}
			}
		}
	}
}
if(IsMatchRegexp( version, "^13" )){
	if( ( revcomp( a: version, b: "13.2X51-D20" ) < 0 ) && ( revcomp( a: version, b: "13.2X51" ) >= 0 ) ){
		security_message( port: 0, data: version );
		exit( 0 );
	}
	else {
		if(( revcomp( a: version, b: "13.3R8" ) < 0 ) && ( revcomp( a: version, b: "13.3" ) >= 0 )){
			security_message( port: 0, data: version );
			exit( 0 );
		}
	}
}
if(IsMatchRegexp( version, "^14" )){
	if( revcomp( a: version, b: "14.1R6" ) < 0 ){
		security_message( port: 0, data: version );
		exit( 0 );
	}
	else {
		if(( revcomp( a: version, b: "14.2R5" ) < 0 ) && ( revcomp( a: version, b: "14.2" ) >= 0 )){
			security_message( port: 0, data: version );
			exit( 0 );
		}
	}
}
exit( 99 );

