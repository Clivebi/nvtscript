CPE = "cpe:/a:elastic:x-pack";
if(description){
	script_oid( "1.3.6.1.4.1.25623.1.0.108276" );
	script_version( "2021-09-09T13:03:05+0000" );
	script_cve_id( "CVE-2017-8449" );
	script_tag( name: "cvss_base", value: "4.3" );
	script_tag( name: "cvss_base_vector", value: "AV:N/AC:M/Au:N/C:P/I:N/A:N" );
	script_tag( name: "last_modification", value: "2021-09-09 13:03:05 +0000 (Thu, 09 Sep 2021)" );
	script_tag( name: "severity_vector", value: "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N" );
	script_tag( name: "severity_origin", value: "NVD" );
	script_tag( name: "severity_date", value: "2019-10-09 23:30:00 +0000 (Wed, 09 Oct 2019)" );
	script_tag( name: "creation_date", value: "2017-10-23 10:54:29 +0200 (Mon, 23 Oct 2017)" );
	script_name( "Elastic Kibana X-Pack 'CVE-2017-8449' Insufficient Access Restriction Vulnerability (Windows)" );
	script_copyright( "Copyright (C) 2017 Greenbone Networks GmbH" );
	script_category( ACT_GATHER_INFO );
	script_family( "Web application abuses" );
	script_dependencies( "gb_elastic_kibana_detect_http.sc", "os_detection.sc" );
	script_mandatory_keys( "elastic/kibana/x-pack/detected", "Host/runs_windows" );
	script_xref( name: "URL", value: "https://www.elastic.co/community/security" );
	script_tag( name: "summary", value: "This host is running Elastic Kibana with X-Pack and is prone to an
  insufficient access restriction vulnerability." );
	script_tag( name: "vuldetect", value: "Checks if a vulnerable version is present on the target host." );
	script_tag( name: "insight", value: "The Flaw would allow access to more fields than the user should have seen
  if the field level security rules used a mix of grant and exclude rules when merging multiple rules with
  field level security rules for the same index." );
	script_tag( name: "affected", value: "All Elastic Kibana X-Pack versions 5.2.x." );
	script_tag( name: "solution", value: "Update to Elastic Kibana X-Pack version 5.3.0 or later." );
	script_tag( name: "qod_type", value: "remote_banner" );
	script_tag( name: "solution_type", value: "VendorFix" );
	exit( 0 );
}
require("version_func.inc.sc");
require("host_details.inc.sc");
if(!port = get_app_port( cpe: CPE )){
	exit( 0 );
}
if(!vers = get_app_version( cpe: CPE, port: port, version_regex: "^5\\.2" )){
	exit( 0 );
}
if(version_is_less( version: vers, test_version: "5.3.0" )){
	report = report_fixed_ver( installed_version: vers, fixed_version: "5.3.0" );
	security_message( port: port, data: report );
	exit( 0 );
}
exit( 99 );

